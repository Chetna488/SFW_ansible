heat_template_version: 2015-04-30

description: >
                SFWNFS VM

#####################################
# Parameters part
#####################################
parameters:
  # VM resource
  name:
    type: string
    label: Name
    description: Name of Instance

  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance

  flavor:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used

  volume_id:
    type: string
    label: Volume ID
    description: Volume ID .

# server_group:
#    type: string
#    label: Server Group
#    description: server group

  # Common Network Ports
  public_EDN_port:
    type: string
    label: port details
    description: port details for our instance .

  private_port:
    type: string
    label: port details
    description: port details for our instance .


  # Common Network Interface

  public_EDNv6_ip:
    type: string
    label: EDNv6 IP
    description: EDNv6 IP

  public_EDNv6_Netmask:
    type: string
    label: EDN IPv6 netmask
    description: NA

  public_EDNv6_IPV6_DEFAULTGW:
    type: string
    label: EDNv6 Gateway
    description: EDNv6 Gateway

  public_EDNv4_ip:
    type: string
    label: EDNv4 IP
    description: EDNv4 IP

  public_EDNv4_Netmask:
    type: string
    label: EDN IPv4 netmask
    description: NA

  public_EDNv4_GATEWAY:
    type: string
    label: EDNv4 Gateway
    description: EDNv4 Gateway

  private_ip:
    type: string
    label: privete IP
    description: private IP

  private_Netmask:
    type: string
    label: private netmask
    description: NA

  private_GATEWAY:
    type: string
    label: Private Gateway
    description: Private Gateway
    

#####################################
# resources part
#####################################
resources:
  my_vm1:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image_id }
      flavor: { get_param: flavor }
#      scheduler_hints: { group: { get_param: server_group } }
      networks:
        - port: { get_param: public_EDN_port }
        - port: { get_param: private_port }

      config_drive: true
      user_data:
        str_replace:
          template: |
            #!/bin/sh
            # IP address configurations
            nmcli con delete "System eth0"
            nmcli con delete "System eth1"
            nmcli con add type ethernet con-name "eth0" ifname eth0 connection.autoconnect yes ipv6.method manual ipv6.addresses "$public_EDNv6_ip" gw6 "$public_EDNv6_IPV6_DEFAULTGW" 802-3-ethernet.mtu 1500
            nmcli con modify eth0 ipv4.addresses "$public_EDNv4_ip/$public_EDNv4_Netmask" gw4 "$public_EDNv4_GATEWAY" ipv4.method manual
            nmcli con add type ethernet con-name "eth1" ifname eth1 connection.autoconnect yes ipv4.method manual ipv4.addresses "$private_ip/$private_Netmask" gw4 "$private_GATEWAY" 802-3-ethernet.mtu 1500 ipv6.method ignore ipv4.never-default yes

            printf "[main]\ndns=none" > /etc/NetworkManager/conf.d/90-dns-none.conf
            systemctl restart NetworkManager

          params:
            # Common Network Interface
            $public_EDNv6_ip: { get_param: public_EDNv6_ip }
            $public_EDNv6_IPV6_DEFAULTGW: { get_param: public_EDNv6_IPV6_DEFAULTGW }
            $public_EDNv6_Netmask: { get_param: public_EDNv6_Netmask }
            $public_EDNv4_ip: { get_param: public_EDNv4_ip }
            $public_EDNv4_GATEWAY: { get_param: public_EDNv4_GATEWAY }
            $public_EDNv4_Netmask: { get_param: public_EDNv4_Netmask }
            $private_ip: { get_param: private_ip }
            $private_GATEWAY: { get_param: private_GATEWAY }
            $private_Netmask: { get_param: private_Netmask }


  ####################################
  # volume attachment part
  ####################################
  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_param: volume_id }
      instance_uuid: { get_resource: my_vm1 }
      
