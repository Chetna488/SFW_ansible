##
# Copyright Mobileum 2019. This program must not be used
# for any purpose without written permission from Mobileum.
# http://www.mobileum.com/
#

# General configuration of the Signalling Firewall Rate Limit Store
#
# In order to minimise the amount of per deployment changes the following
# system variables are available for use in the property definitions:
#
#     ${RATE_LIMIT_STORE_BASE_DIR}             -    Installation directory of the rate limit store software
#     ${RATE_LIMIT_STORE_NODE_ID}              -    Node identifier (e.g. app01, site01-app02)
#     ${RATE_LIMIT_STORE_INSTANCE_ID}          -    Application instance id (for multi firewall instance deployments)
#     ${RATE_LIMIT_STORE_EWOK_NODE_ID}         -    Ewok node id
#     ${RATE_LIMIT_STORE_HZ_PORT}              -    Port number used for hazelcast rate limiting
#
# Environment variables can also be used as follows:
#
#     ${env:ENVIRONMENT_VARIABLE_NAME}  e.g. ${env:HOME} for the users home directory
#

######################################
#
# EWOK Node Identity
#
######################################

# Node Identity - used when connecting to load director and in EDRs
rate.limit.store.ewok.node.name=rate_limit-store-${RATE_LIMIT_STORE_NODE_ID}-${RATE_LIMIT_STORE_INSTANCE_ID}

# Alarm Node Id - this string is included in all alarms that are generated
#rate.limit.store.alarm.node.id=default-node-name

# The node id as presented to the load director and must be unique
rate.limit.store.ewok.node.id=${RATE_LIMIT_STORE_EWOK_NODE_ID}

# Allow the Rate limit store to change the node type to allow for multiple rate limit stores (RATE_LIMIT_STORE=44)
# rate.limit.store.ewok.node.type=44

######################################
#
# EWOK Connection Attributes
#
# Node Attributes used in the ewok connection parameters, such as the tenancies supported
# Each line of one or more attributes will become a row in the LDs connection DB
#
######################################

# By default if no connection attributes defined, then rate limit store will work for all tenants
#FIXME - if rate limit store is to work for only specified tenants
#rate.limit.store.ewok.connection.attributes.1:tid:foo
#rate.limit.store.ewok.connection.attributes.2:tid:two

######################################
#
# Alarm configuration
#
######################################

# Alarm configuration
rate.limit.store.snmp.host=snmphost
rate.limit.store.snmp.port=162

#ANY = 0, SNMPv1=1, SNMPv2c=2, USM=3
rate.limit.store.snmp.version=2

#SNMP add severity varbind in the trap (default:false)
rate.limit.store.snmp.add.severity:false

#SNMP Version 2 Properties
rate.limit.store.snmp.community.string:enginecommunity

#SNMP Version 3 Properties
#security name must be at least 8 characters in length
#rate.limit.store.snmp.securityName:engineUser

# NOAUTH_NOPRIV = 1, AUTH_NOPRIV = 2, AUTH_PRIV = 3;
#rate.limit.store.snmp.securityLevel:1

#rate.limit.store.snmp.authProtocol:M5D
#rate.limit.store.snmp.authPassphrase:engine1234
#rate.limit.store.snmp.privProtocol:PrivDES
#rate.limit.store.snmp.privPassphrase:engine1234

######################################
#
# Log Level Reload
#
# How often to reload the rate.limit.store-log4j-reload.properties
#
######################################

rate.limit.store.log.level.reload.interval.seconds=60

######################################
#
# Monitoring and Statistics
#
######################################

# Thread Overload Statistics reporting period
#rate.limit.store.overloadstats.report.interval.seconds=60

# How long to try to get an EWOK connection on startup before generating an alarm
#
# Units = seconds. A value of 0 or less disables the startup check delay.
rate.limit.store.startup.connection.check.delay.seconds=60

# Location of the tenant provisioning data backup cache directory
rate.limit.store.provisioning.data.cache.dir=${RATE_LIMIT_STORE_BASE_DIR}/data/rate-limit-store/provisioning-data/${RATE_LIMIT_STORE_EWOK_NODE_ID}

# How frequently to check the connection to the hazelcast configuration server
rate.limit.store.hz.config.server.connection.check.interval.seconds=60

# These parameters are for the location of the filesystem that the file copies of the tenant data are
# stored, plus how often the location gets rescanned for updates. If the tenant dir parameter is present
# tenant data is read from there rather than directly from hazelcast
#FIXME: uncomment and correct to enable
rate.limit.store.provisioning.data.tenant.dir=/opt/engine/data/proxydata
rate.limit.store.provisioning.data.tenant.scan.ms=1000

# Provisioning loader periodically checks if the provisioning versions are consistent
# with what is currently in hazelcast. This can be disabled using the following property
# rate.limit.store.version.consistency.check.enabled=true

###########################################################
#
# Thread pool sizing.
#
###########################################################

# Thread pool sizing can be set via two different methods - using both will stop config being loaded
# Method 1
# Int greater than 0
rate.limit.store.threading.thread.number=50

###########################################################
#
# Thread pool queue sizing.
#
###########################################################

# Thread pool queue sizing can be set via two different methods - using both will stop config being loaded
# Method 1
# Int greater than 0
rate.limit.store.threading.queue.size=5000

