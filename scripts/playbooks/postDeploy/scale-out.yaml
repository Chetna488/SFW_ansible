 - name: Scale out
   hosts: local
   become: false
   gather_facts: false
   any_errors_fatal: true
   vars:
     config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
     allowed_vnfs:
      - MC
      - APP
      - RAID
      - INT

   pre_tasks:
    - name: Check if scaleout_params is present
      vars:
        ansible_python_interpreter: /usr/bin/python3
      fail:
        msg: "Missing scaleout_params or format not correct"
      when: 
        - scaleout_params is not defined or scaleout_params.vnf is not defined or scaleout_params.scale_num is not defined or scaleout_params.sharedPath is not defined
      
    - name: Check if heat_env is present
      vars:
        ansible_python_interpreter: /usr/bin/python3
      fail:
        msg: "Missing heat_env parameter"
      when: heat_env is not defined
      
    - name: Make sure VNF is allowed
      fail:
        msg: >-
          "{{ scaleout_params.vnf }}" is not allowed.
          Please choose a VNF in {{ allowed_vnfs | join(', ') }}
      when: not scaleout_params.vnf in allowed_vnfs
      run_once: true

    - name: Check number of environment files
      fail:
        msg: "Environment files shared for {{ scaleout_params.vnf }} = {{ heat_env| selectattr('envfile', 'search', scaleout_params.vnf)|length }}, Value of scaleout_params.scale_num = {{ scaleout_params.scale_num }}"
      when: heat_env| selectattr('envfile', 'search', scaleout_params.vnf)|length != scaleout_params.scale_num

   tasks:
       - name: Get current stack status
         vars:
           ansible_python_interpreter: /usr/bin/python3
         openstack.cloud.stack_info:
         register: stack_info

       - name: Get current instance for {{ scaleout_params.vnf }}
         vars:
           ansible_python_interpreter: /usr/bin/python3
           query: "stacks[?name.starts_with(@, '{{ scaleout_params.vnf }}')]|length(@)"
         set_fact:
           cur_num: "{{ stack_info | json_query(query)}}"

       - name: Get max num file
         vars:
           ansible_python_interpreter: /usr/bin/python
         fetch:
           src: /opt/engine/external/max_vm.ini
           dest: max_vm.ini
         register: location
         remote_user: roamware
         delegate_to: NFS01


       - name: Get max num value
         vars:
           ansible_python_interpreter: /usr/bin/python3
         set_fact:
           max_num: "{{ lookup('ansible.builtin.ini', 'max_num', section= scaleout_params.vnf, file=location['dest'] ) }}"

       - name: Check number of instances
         vars:
           ansible_python_interpreter: /usr/bin/python3
         debug:
           msg: "Current instances: {{ cur_num }}, Max allowed: {{ max_num }}, Scale out requested: {{ scaleout_params.scale_num }}"
         failed_when: cur_num|int + scaleout_params.scale_num|int > max_num|int

       - name: Build environment files list
         set_fact:
           envfile_list: "{{ heat_env|map('json_query','{envfile:envfile}')}}"

       - name: Create folder for each application on shared drive to save env files
         file:
           path: "{{scaleout_params.sharedPath}}/{{item.parameter_defaults.name}}"
           state: directory
         with_items: "{{ heat_env }}"

       - name: Extract environment files
         vars:
           ansible_python_interpreter: /usr/bin/python3
         copy:
           dest: "{{scaleout_params.sharedPath}}/{{item.parameter_defaults.name}}/{{item.envfile}}"
           content: "{{ {'parameter_defaults' : item.parameter_defaults} | to_nice_yaml }}"
         with_items: "{{ heat_env }}"


       - name: Deploy Stack
         vars:
           ansible_python_interpreter: /usr/bin/python3
           name: "{{ item.envfile|regex_search('env_(.*).yaml', '\\1')|first}}"
         openstack.cloud.stack:
           name: "{{ name }}"
           state: present
           template: "../deploy/{{ name[:-2] }}.yaml"
           environment:
             - "{{scaleout_params.sharedPath}}/{{name}}/env_{{name}}.yaml"
         with_items: "{{ envfile_list }}"


       - name: Set hosts for post-scaleout
         set_stats:
           data:
             host: "{{ host|default('')}}{{ item.envfile|regex_search('env_(.*).yaml', '\\1')|first}},}}"
         with_items: "{{ envfile_list }}"
